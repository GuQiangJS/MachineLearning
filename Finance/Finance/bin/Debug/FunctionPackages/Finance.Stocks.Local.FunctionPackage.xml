<?xml version="1.0"?>
<FunctionPackage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>Finance.Stocks.Local</Name>
  <Domain>Finance.Stocks.Local</Domain>
  <Description>本地数据读取功能包</Description>
  <BasePackageNames>
    <Name>Finance.Common</Name>
  </BasePackageNames>
  <Items>
    <FunctionPoint>
      <Name>读取指定股票在本地已经序列化的股票StockInfo信息。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.StockInfoReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>StockInfo保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.StockInfoSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取指定股票在本地已经序列化的股票历史每日交易汇总信息。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalDataReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地HistoricalData前首先从缓存服务（IHistoricalDataCacheService）中找数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalData.Interceptors.OnBeforePrimaryDataRetrieveTryGetCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地HistoricalData数据后，将数据加入缓存服务（IHistoricalDataCacheService）。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalData.Interceptors.OnAfterPrimaryDataRetrieveCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>HistoricalData保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalDataSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <!--<FunctionPoint>
      <Name>HistoricalData保存后清除缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalData.Interceptors.OnAfterHistoricalDataSaveRemoveCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>HistoricalData保存后更新缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HistoricalData.Interceptors.OnAfterHistoricalDataSaveUpdateCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <!--为节省磁盘空间，改用ForSnappyPI的压缩读写方式
    <FunctionPoint>
      <Name>读取指定股票在本地已经序列化的股票历史每日交易明细信息。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetailSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailyTransDetail保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetailReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>读取本地DailyTransDetails前首先从缓存服务（IDailyTransDetailsCacheService）中找数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetails.Interceptors.OnBeforePrimaryDataRetrieveTryGetCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地DailyTransDetails数据后，将数据加入缓存服务（IDailyTransDetailsCacheService）。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetails.Interceptors.OnAfterPrimaryDataRetrieveCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>


    <FunctionPoint>
      <Name>读取指定股票在本地已经序列化的股票历史每日交易明细信息。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetailSaveServiceForSnappyPI,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailyTransDetail保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetailReadServiceForSnappyPI,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    
    
    <!--<FunctionPoint>
      <Name>DailyTransDetail保存后清除缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetails.Interceptors.OnAfterDailyTransDataSaveRemoveCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>DailyTransDetail保存后更新缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyTransDetails.Interceptors.OnAfterDailyTransDataSaveUpdateCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>DailySummary创建服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummaryCreateService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailySummary读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummaryReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地DailySummary前首先从缓存服务（IDailySummaryCacheService）中找数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummary.Interceptors.OnActionStartTryGetCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地DailySummary数据后，将数据加入缓存服务（IDailySummaryCacheService）。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummary.Interceptors.OnCompletedCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailySummary保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummarySaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <!--<FunctionPoint>
      <Name>DailySummary保存后清除缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummary.Interceptors.OnAfterSaveRemoveCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>DailySummary保存后更新缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummary.Interceptors.OnAfterSaveUpdateCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>Local的标准服务出现异常时</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.Interceptors.OnStandardActionException,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <!--<FunctionPoint>
      <Name>DailySummary 缓存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySummaryCacheService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <!--<FunctionPoint>
      <Name>数据准备服务。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyDataPreparationService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->

    <FunctionPoint>
      <Name>DailyAnalysis创建服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyAnalysisCreateService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailyAnalysis读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyAnalysisReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailyAnalysis保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailyAnalysisSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>DailySpecifiedTargetSummary创建服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummaryCreateService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailySpecifiedTargetSummary读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummaryReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地DailySpecifiedTargetSummary前首先从缓存服务（IDailySpecifiedTargetSummaryCacheService）中找数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummary.Interceptors.OnActionStartTryGetCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>读取本地DailySpecifiedTargetSummary数据后，将数据加入缓存服务（IDailySpecifiedTargetSummaryCacheService）。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummary.Interceptors.OnCompletedCacheData,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>DailySpecifiedTargetSummary保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummarySaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <!--<FunctionPoint>
      <Name>DailySpecifiedTargetSummary保存后清除缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummary.Interceptors.OnAfterSaveRemoveCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>DailySpecifiedTargetSummary保存后更新缓存中对应的数据。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummary.Interceptors.OnAfterSaveUpdateCache,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <!--<FunctionPoint>
      <Name>DailySpecifiedTargetSummary 缓存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DailySpecifiedTargetSummaryCacheService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>-->

    <FunctionPoint>
      <Name>CapStockList读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.CapStockListReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>CapStockList差量化保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.CapStockListSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>成交记录读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>成交记录读取服务，出现错误时记录错误</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsInterceptors.OnExceptionShowMessage,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>成交记录保存后，再次保存一份只有正在持仓的小文件（不包含已结束的交易记录）</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsInterceptors.OnSavedSaveFileForWebSite,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>成交记录保存后，再次保存一份只有正在持仓的Js小文件（不包含已结束的交易记录）</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsInterceptors.OnSavedSaveJsFileForWebSite,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>成交记录保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>股票交易盈亏计算结果创建服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsBalanceResultCreateService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>成交记录读取后更新CompanyName属性</Name>
      <Description>股票买入后到卖出的过程中可能存在公司名称变更的情况，所以需要读取最新的公司名称。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.HoldingsInterceptors.OnReadCompleteUpdateCompanyName,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>分红配送记录读取服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DividendDataReadService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>分红配送记录保存服务</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Local.DividendDataSaveService,Finance.Stocks.Local</AssemblyQualifiedName>
    </FunctionPoint>
  </Items>
</FunctionPackage>