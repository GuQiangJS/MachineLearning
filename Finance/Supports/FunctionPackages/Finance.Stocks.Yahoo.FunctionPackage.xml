<?xml version="1.0"?>
<FunctionPackage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>Finance.Stocks.Yahoo</Name>
  <Domain>Finance.Stocks.Yahoo</Domain>
  <Description>雅虎功能包</Description>
  <BasePackageNames>
    <Name>Finance.Common</Name>
  </BasePackageNames>
  <Items>
    <FunctionPoint>
      <Name>由Finance.Stocks.Yahoo获取股票基本信息。</Name>
      <Description>StockInfo对象抓取功能点。实现Finance.IGetStockInfo接口</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.StockInfoReadService,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>数据开始抓取前切片。</Name>
      <Description>数据开始抓取前将Market参数中的sh替换成ss的切片。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.BeforePrimaryDataRetrieve,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>数据抓取后切片。</Name>
      <Description>将结果中NaN字符串替换成01。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterPrimaryDataRetrieve,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>数据构造后切片。</Name>
      <Description>将结果中的Market为ss的转换为sh。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterResultDataBuild,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>
    <FunctionPoint>
      <Name>数据构造后切片。依赖于 “将结果中的Market为ss的转换为sh。”（也可以不依赖）</Name>
      <Description>记录日志。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterStockInfoBuildSaveRecord,Finance.Stocks.Yahoo</AssemblyQualifiedName>
      <Dependency>Yahoo.Stocks.AfterResultDataBuild,Finance.Stocks.Yahoo</Dependency>
    </FunctionPoint>
    <FunctionPoint>
      <Name>数据构造后切片。检查是否需要重新运行</Name>
      <Description>当当前结果对象为空时，根据Finance.Stocks.Yahoo.Config.xml文件中的ReExecution节点确定是否需要重新运行，同时根据ReExecutiongTimes节点确定需要重新运行的次数。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterStockInfoBuildCheck,Finance.Stocks.Yahoo</AssemblyQualifiedName>
      <Dependency>Finance.Yahoo.Stocks.AfterResultDataBuild,Finance.Stocks.Yahoo</Dependency>
    </FunctionPoint>
    <!--停用此功能点，使用IStockInfoSaveService保存-->
    <!--<FunctionPoint>
      <Name>数据构造后切片。序列化结果。</Name>
      <Description>序列化结果。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterStockInfoBuildSaveResult,Finance.Stocks.Yahoo</AssemblyQualifiedName>
      <Dependency>Finance.Stocks.Yahoo.AfterStockInfoBuildCheck,Finance.Stocks.Yahoo</Dependency>
    </FunctionPoint>-->
    <FunctionPoint>
      <Name>当获取信息发生异常时。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.OnGetResultExcepting,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>

    <FunctionPoint>
      <Name>由Yahoo.Finance.Stocks获取历史交易记录。</Name>
      <Description></Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.HistoricalDataReadService,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>
    <!--停用此功能点，使用IHistoricalDataSaveService保存-->
    <!--<FunctionPoint>
      <Name>根据抓取到的数据创建待返回的StockInfo对象后事件。</Name>
      <Description>序列化结果。</Description>
      <AssemblyQualifiedName>Finance.Stocks.Yahoo.AfterHistoricalDataBuildSaveResult,Finance.Stocks.Yahoo</AssemblyQualifiedName>
    </FunctionPoint>-->
  </Items>
</FunctionPackage>